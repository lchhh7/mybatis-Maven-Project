<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinjin.jintranet.admin.commuting.service.AdminCommutingMapper">
    <select id="getCommutingCnt" parameterType="CommutingRequestVO" resultType="Integer">
        SELECT  COUNT(*)
        FROM    ${tableName} a
        WHERE   del_dt IS NULL
                AND approve_id  = #{approveId}
            <if test='searchMemberId != "" and searchMemberId != null'>
                AND member_id   = #{searchMemberId}
            </if>
                AND status IN (''
                <if test='searchStatusR != "" and searchStatusR != null'>
                    , #{statusReadyCd}, #{statusCancelCd}
                </if>
                <if test='searchStatusY != "" and searchStatusY != null'>
                    , #{statusYesCd}, #{statusDeleteCd}
                </if>
                <if test='searchStatusN != "" and searchStatusN != null'>
                    , #{statusNoCd}
                </if>
                )
    </select>

    <select id="findAll" parameterType="CommutingRequestVO" resultType="CommutingRequestVO">
        SELECT  t.*
        FROM    (SELECT ROW_NUMBER() over(order by crt_dt desc) as rnum, a.*,
                        FN_MEMBER_NAME(a.member_id) member_name,
                        FN_MEMBER_NAME(a.approve_id) approve_name,
                        FN_CODE_NAME(#{statusCd}, a.status) status_name,
                        FN_CODE_NAME(#{commutingRequestTypeCd}, a.type) type_name
                FROM    ${tableName} a
                WHERE   del_dt IS NULL
                        AND approve_id  = #{approveId}
                        <if test='searchMemberId != "" and searchMemberId != null'>
                            AND member_id   = #{searchMemberId}
                        </if>
                        AND status IN (''
                        <if test='searchStatusR != "" and searchStatusR != null'>
                            , #{statusReadyCd}, #{statusCancelCd}
                        </if>
                        <if test='searchStatusY != "" and searchStatusY != null'>
                            , #{statusYesCd}, #{statusDeleteCd}
                        </if>
                        <if test='searchStatusN != "" and searchStatusN != null'>
                            , #{statusNoCd}
                        </if>
                        )
                ) t
        WHERE   rnum BETWEEN #{firstIndex} AND #{lastIndex}
        ORDER   BY rnum
    </select>

    <select id="findById" parameterType="CommutingRequestVO" resultType="CommutingRequestVO">
        SELECT  a.*,
                FN_MEMBER_NAME(a.member_id) member_name,
                FN_MEMBER_NAME(a.approve_id) approve_name,
                FN_CODE_NAME(#{statusCd}, a.status) status_name,
                FN_CODE_NAME(#{commutingRequestTypeCd}, a.type) type_name
        FROM    ${tableName} a
        WHERE   del_dt IS NULL
                AND id  = #{id}
    </select>

    <insert id="write" parameterType="CommutingVO">
        INSERT INTO ${tableName} (
            member_id, commuting_tm, attend_yn
        ) VALUES (
            #{memberId}, #{commutingTm}, #{attendYn}
        )
    </insert>
    
    <select id="findOne" parameterType="CommutingVO" resultType="CommutingVO">
        SELECT  *
        FROM    ${tableName}
        WHERE   commuting_tm    = #{commutingTm}
                AND member_id   = #{memberId}
                AND attend_yn   = #{attendYn}  
                AND del_dt IS NULL
    </select>
    <update id="deleteCommuting" parameterType="CommutingVO">
        UPDATE  ${tableName}
        SET     cancel_reason   = #{cancelReason},
                del_dt IS NULL
        WHERE   id  = #{id}
    </update>

    <update id="approve" parameterType="CommutingRequestVO">
        UPDATE  ${tableName}
        SET     status      = #{status},
                approve_dt  = SYSDATE
        WHERE   id  = #{id}
                AND approve_id  = #{approveId}
                AND del_dt IS NULl
    </update>
    
    <update id="approveInit" parameterType="CommutingRequestVO">
        UPDATE  ${tableName}
        SET     status      = 'R',
        		CANCEL_REASON = NULL,
                approve_dt  = NULL,
                UDT_ID = #{memberId},
                UDT_DT = SYSDATE
        WHERE   id  = #{id}
    </update>

    <insert id="addVacations" parameterType="ScheduleVO">
        INSERT INTO ${tableName} (
            type, status, member_id, title, content, start_dt, end_dt,
            start_tm, end_tm, color, approve_id, crt_id, udt_id
        ) VALUES (
            #{type}, #{status}, #{memberId}, #{title}, #{content}, #{startDt}, #{endDt},
            #{startTm}, #{endTm}, #{color}, #{approveId}, #{crtId}, #{udtId}
        )
    </insert>

</mapper>